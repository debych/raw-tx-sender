import {ethers, Transaction} from "ethers";
import * as dotenv from "dotenv";
dotenv.config();

let PROVIDER, PK;

if (process.env.PROVIDER === undefined) {
    throw new Error('No provider url')
} else {
    PROVIDER = process.env.PROVIDER;
}

if (process.env.PRIVATE_KEY === undefined) {
    throw new Error('No private key')
} else {
    PK = process.env.PRIVATE_KEY;
}

const provider = new ethers.providers.JsonRpcProvider(PROVIDER);
const signer = new ethers.Wallet(PK, provider);

async function main() {
    const nonce = await signer.getTransactionCount();

    const tx = {
        to: "0x7D26F09d4e2d032Efa0729fC31a4c2Db8a2394b1",
        data: "0x4039c8d000000000000000000000000008323280a1c8cc53678834f35c4f242b9f1bce2d0000000000000000000000008e3bcc334657560253b83f08331d85267316e08a0000000000000000000000002170ed0880ac9a755fd29b2688956bd959f933f800000000000000000000000000009cc27c811a3e0fdd2fd737afcc721b67ee8e000000000000000000000000000000000000000000000031a3517321027168d00000000000000000000000000000000000000000000000000065b099726f43a000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000089000000000000000000000000c3cffdaf8f3fdf07da6d5e3a89b8723d5e385ff800000000000000000000000000000000000000000000003df54defa200c512c300000000000000000000000000000000000000000000000000000000000003e800000000000000000000000000000000000000000000000000000000000004a87c02520000000000000000000000000005ad60d9a2f1aa30ba0cdbaf1e0a0a145fbea16f000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001800000000000000000000000008e3bcc334657560253b83f08331d85267316e08a0000000000000000000000002170ed0880ac9a755fd29b2688956bd959f933f8000000000000000000000000a6a422f3fd886a313c42cd45d3669d0f161fbb0d0000000000000000000000007d26f09d4e2d032efa0729fc31a4c2db8a2394b1000000000000000000000000000000000000000000000031a3517321027168d00000000000000000000000000000000000000000000000000065b099726f43aa4b757fed6000000000000000000000000a6a422f3fd886a313c42cd45d3669d0f161fbb0d0000000000000000000000008e3bcc334657560253b83f08331d85267316e08a000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c0000000000000000002625a074e4716e431f45807dcf19f284c7aa99f18a4fbc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a4b757fed600000000000000000000000074e4716e431f45807dcf19f284c7aa99f18a4fbc000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c0000000000000000000000002170ed0880ac9a755fd29b2688956bd959f933f80000000000000000002625a01111111254fb6c44bac0bed2854e76f90643097d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cfee7c08000000000000000000000000000000000000000000000000"
    }

    console.log(await signer.sendTransaction(tx));
}

main()
    .then(() => {
        console.log('Finished');
    })
    .catch(err => {
        console.log('Error = ', err)
    });